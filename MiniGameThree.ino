// 'cat_up', 27x25px
const unsigned char cat_up_bitmap [] PROGMEM = {
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x49, 0x20, 0x00, 
	0x00, 0xa9, 0x50, 0x00, 0x01, 0x19, 0x88, 0x00, 0x01, 0x19, 0x88, 0x00, 0x01, 0x09, 0x08, 0x00, 
	0x01, 0x09, 0x08, 0x00, 0x01, 0x09, 0x08, 0x00, 0x01, 0x09, 0x08, 0x00, 0x01, 0x09, 0x08, 0x00, 
	0x01, 0x09, 0x08, 0x00, 0x01, 0x09, 0x08, 0x00, 0x01, 0x09, 0x08, 0x00, 0x00, 0x89, 0x10, 0x00, 
	0x00, 0x69, 0x60, 0x00, 0x00, 0x49, 0x20, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00, 0x40, 0x20, 0x00, 
	0x00, 0x40, 0x20, 0x00, 0x00, 0x7f, 0x20, 0x00, 0x00, 0x49, 0x20, 0x00, 0x00, 0x49, 0x20, 0x00, 
	0x00, 0x49, 0x20, 0x00
};
// 'cat_down', 27x25px
const unsigned char cat_down_bitmap [] PROGMEM = {
	0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x49, 0x20, 0x00, 
	0x00, 0xa9, 0x50, 0x00, 0x01, 0x19, 0x88, 0x00, 0x01, 0x1f, 0x88, 0x00, 0x01, 0x00, 0x08, 0x00, 
	0x01, 0x00, 0x08, 0x00, 0x01, 0x00, 0x08, 0x00, 0x01, 0x20, 0x48, 0x00, 0x01, 0x20, 0x48, 0x00, 
	0x01, 0x00, 0x08, 0x00, 0x01, 0x06, 0x08, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x80, 0x10, 0x00, 
	0x00, 0x40, 0x20, 0x00, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00, 0x40, 0x20, 0x00, 
	0x00, 0x40, 0x20, 0x00, 0x00, 0x7f, 0x20, 0x00, 0x00, 0x49, 0x20, 0x00, 0x00, 0x49, 0x20, 0x00, 
	0x00, 0x49, 0x20, 0x00
};
// 'cat_left', 27x25px
const unsigned char cat_left_bitmap [] PROGMEM = {
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x04, 0x80, 0x02, 0x00, 0x02, 0x40, 
	0x05, 0x00, 0x02, 0x40, 0x08, 0x80, 0x02, 0x40, 0x08, 0x80, 0x02, 0x40, 0x08, 0x60, 0x02, 0x40, 
	0x10, 0x10, 0x02, 0x40, 0x20, 0x10, 0x02, 0x40, 0x28, 0x08, 0x02, 0x40, 0x48, 0x08, 0x02, 0x40, 
	0x80, 0x08, 0x04, 0x80, 0x80, 0x07, 0xf8, 0x80, 0x40, 0x00, 0x01, 0x00, 0x20, 0x00, 0x02, 0x00, 
	0x10, 0x00, 0x02, 0x00, 0x0f, 0x00, 0x01, 0x00, 0x00, 0x88, 0x10, 0x80, 0x01, 0x0f, 0xf8, 0x40, 
	0x02, 0x34, 0x46, 0x20, 0x04, 0x62, 0x89, 0x20, 0x08, 0x91, 0x11, 0x20, 0x09, 0x09, 0x21, 0x20, 
	0x06, 0x06, 0xc0, 0xc0
};
// 'cat_right', 27x25px
const unsigned char cat_right_bitmap [] PROGMEM = {
	0x18, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x48, 0x00, 0x08, 0x00, 
	0x48, 0x00, 0x14, 0x00, 0x48, 0x00, 0x22, 0x00, 0x48, 0x00, 0x22, 0x00, 0x48, 0x00, 0xc2, 0x00, 
	0x48, 0x01, 0x01, 0x00, 0x48, 0x01, 0x00, 0x80, 0x48, 0x02, 0x02, 0x80, 0x48, 0x02, 0x02, 0x40, 
	0x24, 0x02, 0x00, 0x20, 0x23, 0xfc, 0x00, 0x20, 0x10, 0x00, 0x00, 0x40, 0x08, 0x00, 0x00, 0x80, 
	0x08, 0x00, 0x01, 0x00, 0x10, 0x00, 0x1e, 0x00, 0x21, 0x02, 0x20, 0x00, 0x43, 0xfe, 0x10, 0x00, 
	0x8c, 0x45, 0x88, 0x00, 0x92, 0x28, 0xc4, 0x00, 0x91, 0x11, 0x22, 0x00, 0x90, 0x92, 0x12, 0x00, 
	0x60, 0x6c, 0x0c, 0x00
};

const unsigned char* cat_bitmaps[4] = {
	cat_down_bitmap,
  cat_right_bitmap,
  cat_up_bitmap,
  cat_left_bitmap,
};

int mg3_round = 1;
int mg3_health = 3;

bool mg3_buttonPressed = false;

int cat_direction = 0;

void miniGameThree() {
    display.clearDisplay();

  // Read potentiometer value to determine rotation angle
  int potValue = analogRead(POT_INPUT_PIN);

  Serial.println(potValue);

  if(potValue < 250) {
    cat_direction = 0;
  } else if (potValue < 503) {
    cat_direction = 1;
  } else if (potValue < 750) {
    cat_direction = 2;
  } else {
    cat_direction = 3;
  }

  // Draw rotated cat sprite
  display.drawBitmap(centerHor- 27, centerVer-25, cat_bitmaps[cat_direction],27, 25, WHITE);

  display.display();

  delay(10); // Adjust the delay as needed
}

void mg3_reset() {
 mg3_round = 1;
 mg3_health = 3;
 mg3_buttonPressed = false;
 cat_direction = 0;
}